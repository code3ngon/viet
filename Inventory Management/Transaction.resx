<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>